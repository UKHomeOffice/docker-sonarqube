apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: sonarqube
  name: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      name: sonarqube
  template:
    metadata:
      labels:
        name: sonarqube
        app: sonarqube
    spec:
      serviceAccount: sonarqube
      nodeSelector:
        failure-domain.beta.kubernetes.io/zone: eu-west-1b
      containers:
      - name: sonarqube
        image: quay.io/ukhomeofficedigital/sonarqube:{{.DRONE_BUILD_NUMBER}}
        ports:
        - containerPort: 9000
        imagePullPolicy: Always
        resources:
          limits:
            memory: 2Gi
            cpu: 1000m
        env:
        - name: SONARQUBE_OPTS
          value: -Dsonar.web.javaOpts=-server
        - name: SONARQUBE_JDBC_USERNAME
          value: root
        - name: SONARQUBE_JDBC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube-secrets
              key: mysql.password
        - name: SONARQUBE_JDBC_URL
          valueFrom:
            configMapKeyRef:
              name: sonarqube
              key: mysql.url
        - name: JAVA_OPTS
          value: -XX:+PrintGCDetails -XX:+UseParallelGC -Xms1G -Xmx2G
        volumeMounts:
        - mountPath: /opt/sonarqube/extensions
          name: sonarqube-data
        # livenessProbe:
        #   exec:
        #     command:
        #       - /opt/sonarqube/bin/healthcheck.sh
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 1
        # readinessProbe:
        #   exec:
        #     command:
        #       - /opt/sonarqube/bin/healthcheck.sh
        #   initialDelaySeconds: 10
        #   timeoutSeconds: 1
      - name: tls
        image: quay.io/ukhomeofficedigital/nginx-proxy:v1.7.0
        imagePullPolicy: Always
        ports:
        - containerPort: 443
        - containerPort: 80
        env:
        - name: PROXY_SERVICE_HOST
          value: 127.0.0.1
        - name: PROXY_SERVICE_PORT
          value: "9000"
        - name: LOAD_BALANCER_CIDR
          value: 10.50.0.0/16
        - name: ENABLE_UUID_PARAM
          value: "FALSE"
        - name: NAXSI_USE_DEFAULT_RULES
          value: "FALSE"
        - name: ERROR_REDIRECT_CODES
          value: "599"
        - name: CLIENT_MAX_BODY_SIZE
          value: "0"
        - name: ADD_NGINX_SERVER_CFG
          value: |
            add_header Cache-Control private;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Forwarded-Proto "https";
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        - name: SERVER_CERT
          value: /etc/secrets/crt
        - name: SERVER_KEY
          value: /etc/secrets/key
        volumeMounts:
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: sonarqube-secrets
        - name: sonarqube-data
          awsElasticBlockStore:
            volumeID: vol-a7832025
            fsType: ext4
